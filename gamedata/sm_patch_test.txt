"Games"
{
    "tf"
    {
        "Addresses"
        {
            "CTFFlameManager::GetFlameDamageScale()::RemoveFlameDensity"
            {
                "signature"		"CTFFlameManager::GetFlameDamageScale()"
                "windows"
                {
                    "offset"    "390"
                }
                "linux"
                {
                    "offset"    "292"
                }
                "windows64"
                {
                    "offset"	"429"
                }
                "linux64"
                {
                    "offset"	"303"
                }
            }
            "CTFProjectile_EnergyRing::Create()::SetSpeed"
            {
                "signature"		"CTFProjectile_EnergyRing::Create()"
                "windows"
                {
                    "offset"    "107"
                }
                "linux"
                {
                    "offset"    "253"
                }
                "windows64"
                {
                    "offset"	"165"
                }
                "linux64"
                {
                    "offset"	"351"
                }
            }
        }
        "Keys"
        {
            // this should give you a hint to an upcoming plugin of mine! =)
            "CTFFlameManager::GetFlameDamageScale()::RemoveFlameDensity"
            {
                "windows"   "patch = \x31\xC0\x90; verify = \x66\x3B\xC1\x74\x2A;"
                "linux"     "patch = \x31\xC0\x90\x90; verify = \x66\x83\xF8\xFF\x74\x2A;"
                "windows64"	"patch = \x48\x31\xC0; verify = \x66\x3B\xC1;"
                "linux64"	"patch = \x48\x31\xC0\x90; verify = \x66\x83\xF8\xFF\x74\x2A;"
            }

            "CTFProjectile_EnergyRing::Create()::SetSpeed"
            {
                "windows"   "patch = \x2A\x2A\x2A\x2A; wildcard = \x2A\x2A\x2A\x2A;"
                "linux"     "patch = \x2A\x2A\x2A\x2A; wildcard = \x2A\x2A\x2A\x2A;"
                "windows64"	"patch = \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90; wildcard = \x3A\x3A\x3A\x3A\x3A\x3A\x3A\x3A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x01; verify = \xF3\x0F\x10\x15\x2A\x2A\x2A\x2A\x48\x8D\x54\x24\x20\xF3\x0F\x10\x44\x24\x30"
                "linux64"	"patch = \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90; wildcard = \x3A\x3A\x3A\x3A\x3A\x3A\x3A\x3A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A;"
            }
        }
        "Signatures"
        {
            // literally just look up string "GetFlameDamageScale"
            "CTFFlameManager::GetFlameDamageScale()"
            {
                "library"   "server"
                "windows"   "\x55\x8B\xEC\x83\xEC\x18\x8B\x15\x2A\x2A\x2A\x2A\x57"
                "linux"     "@_ZNK15CTFFlameManager19GetFlameDamageScaleEPK10tf_point_tP9CTFPlayer"
                "windows64"	"\x4C\x8B\xDC\x55\x56\x48\x81\xEC\xA8\x00\x00\x00"
                "linux64"	"@_ZNK15CTFFlameManager19GetFlameDamageScaleEPK10tf_point_tP9CTFPlayer"
            }

            // find "tf_projectile_energy_ring" and see if it has the value 1200 in the subroutine pseudocode
            "CTFProjectile_EnergyRing::Create()"
            {
                "library"   "server"
                "windows"   "\x55\x8B\xEC\x83\xEC\x3C\x8D\x45\xD0"
                "linux"     "@_ZN24CTFProjectile_EnergyRing6CreateEP16CTFWeaponBaseGunRK6VectorRK6QAngleffP11CBaseEntityS9_S2_S2_b"
                "windows64"	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x70\x49\x8B\xD8"
                "linux64"	"@_ZN24CTFProjectile_EnergyRing6CreateEP16CTFWeaponBaseGunRK6VectorRK6QAngleffP11CBaseEntityS9_S2_S2_b"
            }
        }
    }
}